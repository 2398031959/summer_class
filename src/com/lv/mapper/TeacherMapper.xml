<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lv.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.lv.po.Teacher">
    <id column="t_id" jdbcType="INTEGER" property="tId" />
    <result column="t_name" jdbcType="VARCHAR" property="tName" />
    <result column="t_sex" jdbcType="CHAR" property="tSex" />
    <result column="t_phone" jdbcType="VARCHAR" property="tPhone" />
    <result column="t_school" jdbcType="VARCHAR" property="tSchool" />
    <result column="t_education" jdbcType="INTEGER" property="tEducation" />
    <result column="t_address" jdbcType="VARCHAR" property="tAddress" />
    <result column="t_date" jdbcType="TIMESTAMP" property="tDate" />
  </resultMap>
   <resultMap id="BaseResultMapWithEducation" type="com.lv.po.Teacher">
    <id column="t_id" jdbcType="INTEGER" property="tId" />
    <result column="t_name" jdbcType="VARCHAR" property="tName" />
    <result column="t_sex" jdbcType="CHAR" property="tSex" />
    <result column="t_phone" jdbcType="VARCHAR" property="tPhone" />
    <result column="t_school" jdbcType="VARCHAR" property="tSchool" />
    <result column="t_education" jdbcType="INTEGER" property="tEducation" />
    <result column="t_address" jdbcType="VARCHAR" property="tAddress" />
    <result column="t_date" jdbcType="TIMESTAMP" property="tDate" />
    <association property="education" javaType="Education">
    	<id column="e_id" property="eId"/>
    	<result column="e_name" property="eName"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    t_id, t_name, t_sex, t_phone, t_school, t_education, t_address, t_date
  </sql>
  <select id="selectByExample" parameterType="com.lv.po.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where t_id = #{tId,jdbcType=INTEGER}
  </select>
   <select id="listTeacherIndex" resultMap="BaseResultMapWithEducation">
  	SELECT * FROM teacher LEFT JOIN education ON education.`e_id`=teacher.`t_education`
  </select>
     <select id="teacherSkip" parameterType="Teacher" resultMap="BaseResultMapWithEducation">
  	SELECT * FROM teacher LEFT JOIN education ON education.`e_id`=teacher.`t_education`
  	<where>
  		<if test="tName!=null and tName!=''">
  			and t_name=#{tName}
  		</if>
  		<if test="tSchool!=null and tSchool!=''">
  			and t_school=#{tSchool}
  		</if>
  		<if test="tEducation!=0">
  			and t_education=#{tEducation}
  		</if>
  	</where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where t_id = #{tId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lv.po.TeacherExample">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lv.po.Teacher">
    insert into teacher (t_id, t_name, t_sex, 
      t_phone, t_school, t_education, 
      t_address, t_date)
    values (#{tId,jdbcType=INTEGER}, #{tName,jdbcType=VARCHAR}, #{tSex,jdbcType=CHAR}, 
      #{tPhone,jdbcType=VARCHAR}, #{tSchool,jdbcType=VARCHAR}, #{tEducation,jdbcType=INTEGER}, 
      #{tAddress,jdbcType=VARCHAR}, #{tDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lv.po.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tId != null">
        t_id,
      </if>
      <if test="tName != null">
        t_name,
      </if>
      <if test="tSex != null">
        t_sex,
      </if>
      <if test="tPhone != null">
        t_phone,
      </if>
      <if test="tSchool != null">
        t_school,
      </if>
      <if test="tEducation != null">
        t_education,
      </if>
      <if test="tAddress != null">
        t_address,
      </if>
      <if test="tDate != null">
        t_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tId != null">
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="tName != null">
        #{tName,jdbcType=VARCHAR},
      </if>
      <if test="tSex != null">
        #{tSex,jdbcType=CHAR},
      </if>
      <if test="tPhone != null">
        #{tPhone,jdbcType=VARCHAR},
      </if>
      <if test="tSchool != null">
        #{tSchool,jdbcType=VARCHAR},
      </if>
      <if test="tEducation != null">
        #{tEducation,jdbcType=INTEGER},
      </if>
      <if test="tAddress != null">
        #{tAddress,jdbcType=VARCHAR},
      </if>
      <if test="tDate != null">
        #{tDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lv.po.TeacherExample" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.tId != null">
        t_id = #{record.tId,jdbcType=INTEGER},
      </if>
      <if test="record.tName != null">
        t_name = #{record.tName,jdbcType=VARCHAR},
      </if>
      <if test="record.tSex != null">
        t_sex = #{record.tSex,jdbcType=CHAR},
      </if>
      <if test="record.tPhone != null">
        t_phone = #{record.tPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.tSchool != null">
        t_school = #{record.tSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.tEducation != null">
        t_education = #{record.tEducation,jdbcType=INTEGER},
      </if>
      <if test="record.tAddress != null">
        t_address = #{record.tAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.tDate != null">
        t_date = #{record.tDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set t_id = #{record.tId,jdbcType=INTEGER},
      t_name = #{record.tName,jdbcType=VARCHAR},
      t_sex = #{record.tSex,jdbcType=CHAR},
      t_phone = #{record.tPhone,jdbcType=VARCHAR},
      t_school = #{record.tSchool,jdbcType=VARCHAR},
      t_education = #{record.tEducation,jdbcType=INTEGER},
      t_address = #{record.tAddress,jdbcType=VARCHAR},
      t_date = #{record.tDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lv.po.Teacher">
    update teacher
    <set>
      <if test="tName != null">
        t_name = #{tName,jdbcType=VARCHAR},
      </if>
      <if test="tSex != null">
        t_sex = #{tSex,jdbcType=CHAR},
      </if>
      <if test="tPhone != null">
        t_phone = #{tPhone,jdbcType=VARCHAR},
      </if>
      <if test="tSchool != null">
        t_school = #{tSchool,jdbcType=VARCHAR},
      </if>
      <if test="tEducation != null">
        t_education = #{tEducation,jdbcType=INTEGER},
      </if>
      <if test="tAddress != null">
        t_address = #{tAddress,jdbcType=VARCHAR},
      </if>
      <if test="tDate != null">
        t_date = #{tDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where t_id = #{tId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lv.po.Teacher">
    update teacher
    set t_name = #{tName,jdbcType=VARCHAR},
      t_sex = #{tSex,jdbcType=CHAR},
      t_phone = #{tPhone,jdbcType=VARCHAR},
      t_school = #{tSchool,jdbcType=VARCHAR},
      t_education = #{tEducation,jdbcType=INTEGER},
      t_address = #{tAddress,jdbcType=VARCHAR},
      t_date = #{tDate,jdbcType=TIMESTAMP}
    where t_id = #{tId,jdbcType=INTEGER}
  </update>
</mapper>